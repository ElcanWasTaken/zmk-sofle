#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    hml: homerow_mod_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MOD_LEFT";
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;

        tapping-term-ms = <280>;
        flavor = "balanced";
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        hold-trigger-on-release;
        hold-trigger-key-positions = <0 13 26 39 40 27 1 14 3 2 15 28 41 53 54 42 29 16 4 17 30 43 55 44 31 18 5 56 57>;
    };

    hmr: homerow_mod_right {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MOD_RIGHT";
        #binding-cells = <2>;
        bindings = <&kp>, <&kp>;

        tapping-term-ms = <280>;
        flavor = "balanced";
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        hold-trigger-on-release;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59>;
    };

    skq: stick_key_quick_release {
        compatible = "zmk,behavior-sticky-key";
        label = "STICKY_KEY_QUICK_RELEASE";
        bindings = <&kp>;
        #binding-cells = <1>;
        release-after-ms = <1000>;
        quick-release;
    };

    oss: oneshot_mod {
        compatible = "zmk,behavior-hold-tap";
        label = "ONESHOT_MOD";
        bindings = <&kp>, <&skq>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp DEL     &kp N1           &kp N2           &kp N3            &kp N4        &kp N5                        &kp UP_ARROW    &kp N6     &kp N7               &kp N8                &kp N9           &kp N0                   &kp BACKSPACE
&kp TAB     &kp Q            &kp W            &kp E             &kp R         &kp T                         &kp DOWN_ARROW  &kp Y      &kp U                &kp I                 &kp O            &kp P                    &kp BSLH
&kp ESCAPE  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LSHIFT D     &hml LCTRL F  &kp G                         &to 5           &kp H      &hmr LEFT_CONTROL J  &hmr LEFT_SHIFT K     &hmr LEFT_ALT L  &hmr LEFT_GUI SEMICOLON  &kp APOS
&sl 2       &kp Z            &kp X            &kp C             &kp V         &kp B                         &to 6           &kp N      &kp M                &kp COMMA             &kp DOT          &kp FSLH                 &sl 2
&kp C_MUTE  &kp LGUI         &mo 3            &kp LS(LC(LALT))  &kp SPACE     &oss LEFT_SHIFT LEFT_SHIFT    &kp ENTER       &kp ENTER  &kp SPACE            &kp LS(LA(LC(LGUI)))  &mo 1            &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
        };

        Nav_Edit {
            bindings = <
&trans  &kp F1          &kp F2            &kp F3                  &kp F4                   &kp F5    &trans  &kp F6         &kp F7          &kp F8          &kp F9           &kp F10        &trans
&trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT              &trans                   &trans    &trans  &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp F11        &kp F12
&trans  &kp LEFT_GUI    &kp LEFT_ALT      &kp LEFT_SHIFT          &kp LEFT_CONTROL         &trans    &trans  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans         &trans
&trans  &mkp MB4        &mkp MB5          &kp LC(LS(LEFT_ARROW))  &kp LC(LS(RIGHT_ARROW))  &trans    &trans  &trans         &trans          &trans          &trans           &kp LC(LS(L))  &trans
&trans  &trans          &trans            &trans                  &trans                   &trans    &trans  &trans         &trans          &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "NAVEDT";
        };

        Symbols {
            bindings = <
&trans  &none            &none   &none             &none              &none          &trans  &none          &none                 &none                  &none             &none     &trans
&trans  &kp EXCLAMATION  &kp AT  &kp HASH          &kp DOLLAR         &kp PERCENT    &trans  &kp CARET      &kp AMPERSAND         &kp STAR               &kp MINUS         &kp PLUS  &kp PIPE
&trans  &kp GRAVE        &none   &kp LEFT_BRACE    &kp RIGHT_BRACE    &none          &trans  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL         &trans    &trans
&trans  &kp TILDE        &none   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none          &trans  &none          &none                 &kp LESS_THAN          &kp GREATER_THAN  &trans    &trans
&trans  &trans           &trans  &trans            &kp UNDERSCORE     &trans         &trans  &trans         &trans                &trans                 &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "SYM";
        };

        Macro_Numpad {
            bindings = <
&kp PRINTSCREEN  &none   &none   &kp LC(F3)  &kp LC(F4)  &kp LC(F5)    &trans  &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &trans
&trans           &none   &none   &none       &none       &none         &trans  &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &kp LC(F12)
&trans           &none   &none   &none       &none       &none         &trans  &none            &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none         &none
&trans           &none   &none   &none       &none       &none         &trans  &none            &none            &kp KP_NUMBER_0  &kp KP_DOT       &none         &trans
&trans           &trans  &trans  &trans      &trans      &trans        &trans  &trans           &trans           &trans           &to 4            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "MACRONUM";
        };

        Gaming {
            bindings = <
&kp ESC     &kp N1    &kp N2    &kp N3  &kp N4     &kp N5    &trans  &kp N6  &kp N7     &kp N8         &kp N9   &kp N0     &kp BSPC
&kp TAB     &kp Q     &kp W     &kp E   &kp R      &kp T     &trans  &kp Y   &kp U      &kp I          &kp O    &kp P      &kp BSLH
&kp LCTRL   &kp A     &kp S     &kp D   &kp F      &kp G     &trans  &kp H   &kp J      &kp K          &kp L    &kp SEMI   &kp APOS
&kp LSHFT   &kp Z     &kp X     &kp C   &kp V      &kp B     &trans  &kp N   &kp M      &kp COMMA      &kp DOT  &kp FSLH   &kp RSHFT
&kp C_MUTE  &kp LGUI  &kp LALT  &to 2   &kp SPACE  &trans    &trans  &trans  &kp SPACE  &kp RIGHT_ALT  &to 0    &kp RCTRL
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "GAMING";
        };

        DEF_FUNC {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP    &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN  &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &to 0           &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &to 6           &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK       &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "DEF_FUNC";
            sensor-bindings = <&scroll_encoder>;
        };

        DEF_BT {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP    &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN  &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &to 5           &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &to 0           &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK       &trans  &trans  &trans      &trans     &trans
            >;

            display-name = "DEF_BT";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
